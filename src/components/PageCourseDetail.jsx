import React, { useEffect, useState } from "react";
import { useParams, useNavigate } from "react-router-dom";
import { motion } from "framer-motion";
import axios from "axios";
import Header from "./Header";
import Footer from "./Footer";
import { studentRegisterCourses } from "../api/course.api";
import { User } from "lucide-react";

const PageCourseDetail = () => {
  const navigate = useNavigate();
  const { documentId } = useParams();
  const [course, setCourse] = useState(null);
  const [teacher, setTeacher] = useState(null);
  const [isLoading, setIsLoading] = useState(true);
  const [activeTab, setActiveTab] = useState("overview");
  const [openFaqIndex, setOpenFaqIndex] = useState(null);
  const currentUser = JSON.parse(localStorage.getItem("user"));
  const isTeacher = currentUser?.roleUser === "TEACHER";
  const isUser = !currentUser?.roleUser || currentUser?.roleUser === "USER";
  const isAdmin = currentUser?.roleUser === "ADMIN";

  const fetchTeacherInfo = async (teacherId) => {
    try {
      const response = await axios.get(
        `http://localhost:1337/api/users/${teacherId}`
      );
      setTeacher(response.data);
    } catch (error) {
      console.error("L·ªói khi l·∫•y th√¥ng tin gi√°o vi√™n:", error);
    }
  };

  useEffect(() => {
    const fetchPageCourseDetails = async () => {
      try {
        setIsLoading(true);
        const response = await axios.get(
          `http://localhost:1337/api/courses?filters[documentId][$eq]=${documentId}&populate=*`
        );
        const courseData = response.data.data[0];
        setCourse(courseData);

        // Fetch teacher info if teacher_id exists
        if (courseData?.teacher_id) {
          await fetchTeacherInfo(courseData.teacher_id);
        }
      } catch (error) {
        console.error("L·ªói khi l·∫•y th√¥ng tin kh√≥a h·ªçc t·ª´ API:", error);
      } finally {
        setIsLoading(false);
      }
    };

    fetchPageCourseDetails();
  }, [documentId]);

  const handleRegisterCourse = async () => {
    if (!currentUser) {
      alert("B·∫°n ph·∫£i ƒëƒÉng nh·∫≠p t√†i kho·∫£n ƒë·ªÉ ti·∫øp t·ª•c!");
      // navigate("/login");
      return;
    }
    const isConfirmed = window.confirm(
      "B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën ƒëƒÉng k√Ω kh√≥a h·ªçc n√†y kh√¥ng?"
    );
    if (!isConfirmed) {
      return;
    }
    try {
      const payload = {
        student_id: currentUser.id,
        teacher_id: course.teacher_id,
        course_id: course.documentId,
        status_id: 1,
      };
      const res = await studentRegisterCourses(payload);
      console.log("sss", res);

      alert("ƒêƒÉng k√Ω kh√≥a h·ªçc th√†nh c√¥ng! Vui l√≤ng ch·ªù ph√™ duy·ªát.");
    } catch (error) {
      console.error("L·ªói khi ƒëƒÉng k√Ω kh√≥a h·ªçc:", error);
      alert("Kh√¥ng th·ªÉ ƒëƒÉng k√Ω kh√≥a h·ªçc. Vui l√≤ng th·ª≠ l·∫°i!");
    }
  };
  const faqs = [
    {
      question: "T√¥i c·∫ßn chu·∫©n b·ªã nh·ªØng g√¨ khi b·∫Øt ƒë·∫ßu kh√≥a h·ªçc?",
      answer:
        "B·∫°n c·∫ßn chu·∫©n b·ªã: CMND/CCCD b·∫£n g·ªëc, gi·∫•y kh√°m s·ª©c kh·ªèe, 4 ·∫£nh 3x4 (√°o c√≥ c·ªï, n·ªÅn tr·∫Øng). Trung t√¢m s·∫Ω h·ªó tr·ª£ b·∫°n ho√†n thi·ªán h·ªì s∆° ƒëƒÉng k√Ω.",
    },
    {
      question: "L·ªãch h·ªçc c√≥ th·ªÉ thay ƒë·ªïi ƒë∆∞·ª£c kh√¥ng?",
      answer:
        "C√≥, b·∫°n c√≥ th·ªÉ thay ƒë·ªïi l·ªãch h·ªçc tr∆∞·ªõc 24h khi c√≥ vi·ªác ƒë·ªôt xu·∫•t. Ch√∫ng t√¥i s·∫Ω s·∫Øp x·∫øp bu·ªïi h·ªçc b√π v√†o th·ªùi gian ph√π h·ª£p v·ªõi b·∫°n.",
    },
    {
      question: "Sau bao l√¢u th√¨ ƒë∆∞·ª£c thi s√°t h·∫°ch?",
      answer:
        "Sau khi ho√†n th√†nh kh√≥a h·ªçc (3 th√°ng), b·∫°n s·∫Ω ƒë∆∞·ª£c ƒëƒÉng k√Ω thi s√°t h·∫°ch trong v√≤ng 1-2 tu·∫ßn ti·∫øp theo t√πy v√†o l·ªãch thi c·ªßa S·ªü GTVT.",
    },
    {
      question: "N·∫øu kh√¥ng ƒë·∫°t c√≥ ƒë∆∞·ª£c h·ªçc l·∫°i mi·ªÖn ph√≠ kh√¥ng?",
      answer:
        "N·∫øu kh√¥ng ƒë·∫°t ph·∫ßn thi n√†o (l√Ω thuy·∫øt ho·∫∑c th·ª±c h√†nh), b·∫°n s·∫Ω ƒë∆∞·ª£c h·ªçc l·∫°i mi·ªÖn ph√≠ ph·∫ßn ƒë√≥ v√† ch·ªâ ph·∫£i ƒë√≥ng l·ªá ph√≠ thi l·∫°i theo quy ƒë·ªãnh.",
    },
  ];

  if (isLoading) {
    return (
      <>
        <Header />
        <div className="min-h-screen flex items-center justify-center bg-gradient-to-br from-gray-50 to-gray-100">
          <div className="text-center">
            <div className="w-20 h-20 border-4 border-red-500 border-t-transparent rounded-full animate-spin mx-auto mb-6"></div>
            <p className="text-xl font-semibold text-gray-700">
              ƒêang t·∫£i th√¥ng tin kh√≥a h·ªçc...
            </p>
            <p className="text-gray-500 mt-2">Vui l√≤ng ch·ªù trong gi√¢y l√°t</p>
          </div>
        </div>
      </>
    );
  }

  if (!course) {
    return (
      <>
        <Header />
        <div className="min-h-screen flex items-center justify-center bg-gradient-to-br from-gray-50 to-gray-100">
          <motion.div
            initial={{ opacity: 0, y: 30 }}
            animate={{ opacity: 1, y: 0 }}
            className="text-center p-8 bg-white rounded-2xl shadow-xl max-w-md"
          >
            <div className="mx-auto flex items-center justify-center h-16 w-16 rounded-full bg-red-100 mb-6">
              <svg
                className="h-8 w-8 text-red-600"
                fill="none"
                viewBox="0 0 24 24"
                stroke="currentColor"
              >
                <path
                  strokeLinecap="round"
                  strokeLinejoin="round"
                  strokeWidth="2"
                  d="M6 18L18 6M6 6l12 12"
                />
              </svg>
            </div>
            <h2 className="text-3xl font-bold text-gray-800 mb-3">
              Kh√¥ng t√¨m th·∫•y kh√≥a h·ªçc
            </h2>
            <p className="text-gray-600 mb-8">
              Kh√≥a h·ªçc b·∫°n ƒëang t√¨m ki·∫øm kh√¥ng t·ªìn t·∫°i ho·∫∑c ƒë√£ b·ªã x√≥a.
            </p>
            <motion.button
              whileHover={{ scale: 1.05 }}
              whileTap={{ scale: 0.95 }}
              onClick={() => navigate(-1)}
              className="px-8 py-3 bg-gradient-to-r from-red-500 to-pink-500 text-white font-semibold rounded-xl hover:from-red-600 hover:to-pink-600 transition-all duration-300 shadow-lg"
            >
              ‚Üê Quay l·∫°i trang tr∆∞·ªõc
            </motion.button>
          </motion.div>
        </div>
        <Footer />
      </>
    );
  }

  return (
    <>
      <Header />
      <div className="bg-gradient-to-br from-gray-50 to-gray-100 min-h-screen">
        {/* Hero Section */}
        <section className="relative bg-gradient-to-r from-red-600 via-red-500 to-pink-600 text-white overflow-hidden">
          <div className="absolute inset-0 bg-black/40"></div>
          {course?.img?.data && (
            <div className="absolute inset-0">
              <img
                className="w-full h-full object-cover opacity-30"
                src={`http://localhost:1337${course.img.data[0].url}`}
                alt={course.img.data[0].name}
              />
            </div>
          )}
          <div className="relative container mx-auto px-4 py-32">
            <motion.div
              initial={{ opacity: 0, y: 30 }}
              animate={{ opacity: 1, y: 0 }}
              transition={{ duration: 0.6 }}
              className="max-w-4xl"
            >
              <div className="mb-6">
                <span className="inline-block px-4 py-2 bg-yellow-400 text-black font-bold rounded-full text-sm mb-4">
                  üéì Kh√≥a h·ªçc ch·∫•t l∆∞·ª£ng cao
                </span>
              </div>
              <h1 className="text-4xl md:text-6xl font-bold mb-6 leading-tight">
                {course.NameCourse}
              </h1>
              <p className="text-xl md:text-2xl text-white/90 mb-8 max-w-3xl">
                Kh√≥a h·ªçc l√°i xe {course.license_type} ch·∫•t l∆∞·ª£ng cao v·ªõi t·ª∑ l·ªá
                ƒë·∫≠u 98%
              </p>
              <div className="flex flex-wrap gap-4">
                <div className="bg-white/20 backdrop-blur-sm rounded-xl px-6 py-3">
                  <span className="font-semibold">‚≠ê T·ª∑ l·ªá ƒë·∫≠u 98%</span>
                </div>
                <div className="bg-white/20 backdrop-blur-sm rounded-xl px-6 py-3">
                  <span className="font-semibold">
                    üë®‚Äçüè´ Gi·∫£ng vi√™n chuy√™n nghi·ªáp
                  </span>
                </div>
                <div className="bg-white/20 backdrop-blur-sm rounded-xl px-6 py-3">
                  <span className="font-semibold">üöó Xe ƒë·ªùi m·ªõi</span>
                </div>
              </div>
            </motion.div>
          </div>
        </section>

        {/* Main Content */}
        <section className="py-16">
          <div className="container mx-auto px-4">
            <div className="flex flex-col lg:flex-row gap-8">
              {/* Left Column - Course Info */}
              <div className="lg:w-2/3">
                {/* Tabs */}
                <div className="bg-white rounded-2xl shadow-lg overflow-hidden mb-8">
                  <div className="border-b border-gray-200">
                    <nav className="flex">
                      {[
                        { id: "overview", name: "T·ªïng quan", icon: "üìã" },
                        {
                          id: "curriculum",
                          name: "Ch∆∞∆°ng tr√¨nh h·ªçc",
                          icon: "üìö",
                        },
                        { id: "instructors", name: "Gi√°o vi√™n", icon: "üë®‚Äçüè´" },
                        { id: "faq", name: "FAQ", icon: "‚ùì" },
                      ].map((tab) => (
                        <button
                          key={tab.id}
                          onClick={() => setActiveTab(tab.id)}
                          className={`flex-1 flex items-center justify-center space-x-2 py-4 px-4 text-sm font-medium transition-all duration-300 ${
                            activeTab === tab.id
                              ? "border-b-2 border-red-500 text-red-600 bg-red-50"
                              : "text-gray-500 hover:text-gray-700 hover:bg-gray-50"
                          }`}
                        >
                          <span>{tab.icon}</span>
                          <span className="hidden sm:inline">{tab.name}</span>
                        </button>
                      ))}
                    </nav>
                  </div>

                  <div className="p-8">
                    {/* Tab Content */}
                    {activeTab === "overview" && (
                      <motion.div
                        initial={{ opacity: 0, y: 20 }}
                        animate={{ opacity: 1, y: 0 }}
                        transition={{ duration: 0.5 }}
                      >
                        <h2 className="text-3xl font-bold text-gray-900 mb-6">
                          Gi·ªõi thi·ªáu kh√≥a h·ªçc
                        </h2>
                        <p className="text-gray-700 text-lg mb-8 leading-relaxed">
                          Kh√≥a h·ªçc l√°i xe {course.license_type} ƒë∆∞·ª£c thi·∫øt k·∫ø
                          b√†i b·∫£n gi√∫p h·ªçc vi√™n n·∫Øm v·ªØng ki·∫øn th·ª©c l√Ω thuy·∫øt v√†
                          k·ªπ nƒÉng th·ª±c h√†nh l√°i xe an to√†n. Ch√∫ng t√¥i cam k·∫øt
                          ƒë√†o t·∫°o ch·∫•t l∆∞·ª£ng v·ªõi ƒë·ªôi ng≈© gi√°o vi√™n gi√†u kinh
                          nghi·ªám.
                        </p>

                        <div className="bg-gradient-to-r from-red-50 to-pink-50 rounded-2xl p-8 mb-8 border border-red-100">
                          <h3 className="text-2xl font-bold text-red-800 mb-6 flex items-center">
                            <span className="mr-3">üéØ</span>
                            L·ª£i √≠ch khi tham gia
                          </h3>
                          <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                            {[
                              "H·ªçc l√°i v·ªõi xe ƒë·ªùi m·ªõi, ƒë·∫£m b·∫£o an to√†n",
                              "Gi√°o tr√¨nh ƒë√†o t·∫°o chu·∫©n B·ªô GTVT",
                              "L·ªãch h·ªçc linh ho·∫°t, c√≥ th·ªÉ ƒë·ªïi bu·ªïi khi c·∫ßn",
                              "H·ªó tr·ª£ ƒëƒÉng k√Ω thi s√°t h·∫°ch",
                            ].map((benefit, index) => (
                              <div key={index} className="flex items-start">
                                <div className="flex-shrink-0 w-6 h-6 bg-green-500 rounded-full flex items-center justify-center mr-3 mt-0.5">
                                  <svg
                                    className="w-4 h-4 text-white"
                                    fill="currentColor"
                                    viewBox="0 0 20 20"
                                  >
                                    <path
                                      fillRule="evenodd"
                                      d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z"
                                      clipRule="evenodd"
                                    />
                                  </svg>
                                </div>
                                <span className="text-gray-700">{benefit}</span>
                              </div>
                            ))}
                          </div>
                        </div>

                        <h3 className="text-2xl font-bold text-gray-900 mb-6">
                          Th√¥ng tin chi ti·∫øt
                        </h3>
                        <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                          {[
                            {
                              icon: "‚è∞",
                              label: "Th·ªùi l∆∞·ª£ng",
                              value: "3 th√°ng (12 tu·∫ßn h·ªçc)",
                            },
                            {
                              icon: "üìÖ",
                              label: "L·ªãch h·ªçc",
                              value: course.schedule,
                            },
                            {
                              icon: "üéñÔ∏è",
                              label: "B·∫±ng l√°i",
                              value: course.license_type,
                            },
                            {
                              icon: "üí∞",
                              label: "H·ªçc ph√≠",
                              value: `${new Intl.NumberFormat("vi-VN").format(
                                course.Tuition
                              )} VNƒê`,
                            },
                          ].map((info, index) => (
                            <div
                              key={index}
                              className="bg-white p-6 rounded-xl shadow-md border border-gray-100 hover:shadow-lg transition-shadow duration-300"
                            >
                              <div className="flex items-center mb-3">
                                <span className="text-2xl mr-3">
                                  {info.icon}
                                </span>
                                <span className="font-semibold text-gray-800">
                                  {info.label}
                                </span>
                              </div>
                              <p className="text-gray-700 font-medium">
                                {info.value}
                              </p>
                            </div>
                          ))}
                        </div>
                      </motion.div>
                    )}

                    {activeTab === "curriculum" && (
                      <motion.div
                        initial={{ opacity: 0, y: 20 }}
                        animate={{ opacity: 1, y: 0 }}
                        transition={{ duration: 0.5 }}
                      >
                        <h2 className="text-3xl font-bold text-gray-900 mb-8">
                          Ch∆∞∆°ng tr√¨nh ƒë√†o t·∫°o
                        </h2>

                        <div className="space-y-8">
                          <div className="bg-blue-50 rounded-2xl p-8">
                            <h3 className="text-2xl font-bold text-blue-800 mb-6 flex items-center">
                              <span className="mr-3">üìñ</span>
                              Ph·∫ßn l√Ω thuy·∫øt
                            </h3>
                            <div className="space-y-6">
                              {[
                                {
                                  title: "Lu·∫≠t giao th√¥ng ƒë∆∞·ªùng b·ªô",
                                  duration: "8 bu·ªïi h·ªçc",
                                  desc: "H·ªá th·ªëng b√°o hi·ªáu ƒë∆∞·ªùng b·ªô, quy t·∫Øc giao th√¥ng v√† x·ª≠ l√Ω t√¨nh hu·ªëng",
                                },
                                {
                                  title: "C·∫•u t·∫°o xe v√† s·ª≠a ch·ªØa c∆° b·∫£n",
                                  duration: "4 bu·ªïi h·ªçc",
                                  desc: "C·∫•u t·∫°o xe √¥ t√¥ v√† c√°ch x·ª≠ l√Ω c√°c s·ª± c·ªë th∆∞·ªùng g·∫∑p",
                                },
                                {
                                  title: "ƒê·∫°o ƒë·ª©c ng∆∞·ªùi l√°i xe",
                                  duration: "2 bu·ªïi h·ªçc",
                                  desc: "VƒÉn h√≥a giao th√¥ng v√† tr√°ch nhi·ªám c·ªßa ng∆∞·ªùi ƒëi·ªÅu khi·ªÉn ph∆∞∆°ng ti·ªán",
                                },
                              ].map((item, index) => (
                                <div
                                  key={index}
                                  className="flex items-start bg-white rounded-xl p-6 shadow-sm"
                                >
                                  <div className="flex-shrink-0 w-12 h-12 rounded-full bg-blue-100 flex items-center justify-center mr-4">
                                    <span className="text-blue-600 font-bold">
                                      {index + 1}
                                    </span>
                                  </div>
                                  <div className="flex-1">
                                    <div className="flex justify-between items-start mb-2">
                                      <h4 className="font-bold text-gray-900">
                                        {item.title}
                                      </h4>
                                      <span className="text-sm bg-blue-100 text-blue-800 px-3 py-1 rounded-full">
                                        {item.duration}
                                      </span>
                                    </div>
                                    <p className="text-gray-600">{item.desc}</p>
                                  </div>
                                </div>
                              ))}
                            </div>
                          </div>

                          <div className="bg-green-50 rounded-2xl p-8">
                            <h3 className="text-2xl font-bold text-green-800 mb-6 flex items-center">
                              <span className="mr-3">üöó</span>
                              Ph·∫ßn th·ª±c h√†nh
                            </h3>
                            <div className="space-y-6">
                              {[
                                {
                                  title: "L√°i xe trong s√¢n t·∫≠p",
                                  duration: "6 bu·ªïi",
                                  desc: "C√°c k·ªπ nƒÉng c∆° b·∫£n: ƒë·ªÅ pa, d·ª´ng xe, l√πi xe, gh√©p ngang, ƒë·ªó xe",
                                },
                                {
                                  title: "L√°i xe ƒë∆∞·ªùng tr∆∞·ªùng",
                                  duration: "6 bu·ªïi",
                                  desc: "T·∫≠p l√°i tr√™n c√°c tuy·∫øn ƒë∆∞·ªùng t·ª´ ƒë∆°n gi·∫£n ƒë·∫øn ph·ª©c t·∫°p",
                                },
                                {
                                  title: "Thi th·ª≠",
                                  duration: "2 bu·ªïi",
                                  desc: "Thi th·ª≠ theo ƒë√∫ng quy tr√¨nh s√°t h·∫°ch c·ªßa B·ªô GTVT",
                                },
                              ].map((item, index) => (
                                <div
                                  key={index}
                                  className="flex items-start bg-white rounded-xl p-6 shadow-sm"
                                >
                                  <div className="flex-shrink-0 w-12 h-12 rounded-full bg-green-100 flex items-center justify-center mr-4">
                                    <span className="text-green-600 font-bold">
                                      {index + 1}
                                    </span>
                                  </div>
                                  <div className="flex-1">
                                    <div className="flex justify-between items-start mb-2">
                                      <h4 className="font-bold text-gray-900">
                                        {item.title}
                                      </h4>
                                      <span className="text-sm bg-green-100 text-green-800 px-3 py-1 rounded-full">
                                        {item.duration}
                                      </span>
                                    </div>
                                    <p className="text-gray-600">{item.desc}</p>
                                  </div>
                                </div>
                              ))}
                            </div>
                          </div>
                        </div>
                      </motion.div>
                    )}

                    {activeTab === "instructors" && (
                      <motion.div
                        initial={{ opacity: 0, y: 20 }}
                        animate={{ opacity: 1, y: 0 }}
                        transition={{ duration: 0.5 }}
                      >
                        <h2 className="text-3xl font-bold text-gray-900 mb-8">
                          Gi√°o vi√™n ph·ª• tr√°ch
                        </h2>

                        {teacher ? (
                          <div className="bg-white p-8 rounded-2xl shadow-lg">
                            <div className="flex items-center mb-6">
                              <div className="w-20 h-20 rounded-full overflow-hidden mr-6 border-4 border-red-100 bg-red-100 flex items-center justify-center">
                                {/* icon  */}
                                <User className="w-10 h-10 text-red-500" />
                              </div>
                              <div>
                                <h3 className="text-2xl font-bold text-gray-800">
                                  {teacher.username}
                                </h3>
                                <p className="text-red-600 font-medium text-lg">
                                  Gi√°o vi√™n h∆∞·ªõng d·∫´n
                                </p>
                              </div>
                            </div>
                            <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                              <div className="bg-gray-50 p-4 rounded-xl">
                                <h4 className="font-semibold text-gray-800 mb-2">
                                  üìß Email:
                                </h4>
                                <p className="text-gray-600">{teacher.email}</p>
                              </div>
                            </div>
                            <div className="mt-6 p-4 bg-blue-50 rounded-xl">
                              <p className="text-gray-700 leading-relaxed">
                                <strong>
                                  {teacher.fullname || teacher.username}
                                </strong>{" "}
                                s·∫Ω l√† gi√°o vi√™n h∆∞·ªõng d·∫´n cho kh√≥a h·ªçc n√†y. Gi√°o
                                vi√™n c√≥ kinh nghi·ªám trong vi·ªác ƒë√†o t·∫°o l√°i xe v√†
                                s·∫Ω ƒë·ªìng h√†nh c√πng b·∫°n trong su·ªët qu√° tr√¨nh h·ªçc.
                              </p>
                            </div>
                          </div>
                        ) : (
                          <div className="bg-white p-8 rounded-2xl shadow-lg text-center">
                            <div className="w-16 h-16 border-4 border-gray-300 border-t-red-500 rounded-full animate-spin mx-auto mb-4"></div>
                            <p className="text-gray-600">
                              ƒêang t·∫£i th√¥ng tin gi√°o vi√™n...
                            </p>
                          </div>
                        )}
                      </motion.div>
                    )}

                    {activeTab === "faq" && (
                      <motion.div
                        initial={{ opacity: 0, y: 20 }}
                        animate={{ opacity: 1, y: 0 }}
                        transition={{ duration: 0.5 }}
                      >
                        <h2 className="text-3xl font-bold text-gray-900 mb-8">
                          C√¢u h·ªèi th∆∞·ªùng g·∫∑p
                        </h2>

                        <div className="space-y-4">
                          {faqs.map((faq, index) => (
                            <div
                              key={index}
                              className="border border-gray-200 rounded-xl overflow-hidden"
                            >
                              <button
                                onClick={() =>
                                  setOpenFaqIndex(
                                    openFaqIndex === index ? null : index
                                  )
                                }
                                className="w-full flex justify-between items-center p-6 text-left bg-gray-50 hover:bg-gray-100 transition-colors duration-200"
                              >
                                <span className="font-semibold text-gray-800 pr-4">
                                  {faq.question}
                                </span>
                                <svg
                                  className={`w-5 h-5 text-gray-500 transform transition-transform duration-200 ${
                                    openFaqIndex === index ? "rotate-180" : ""
                                  }`}
                                  fill="none"
                                  stroke="currentColor"
                                  viewBox="0 0 24 24"
                                >
                                  <path
                                    strokeLinecap="round"
                                    strokeLinejoin="round"
                                    strokeWidth="2"
                                    d="M19 9l-7 7-7-7"
                                  />
                                </svg>
                              </button>
                              {openFaqIndex === index && (
                                <motion.div
                                  initial={{ opacity: 0, height: 0 }}
                                  animate={{ opacity: 1, height: "auto" }}
                                  exit={{ opacity: 0, height: 0 }}
                                  transition={{ duration: 0.3 }}
                                  className="p-6 bg-white border-t border-gray-200"
                                >
                                  <p className="text-gray-700 leading-relaxed">
                                    {faq.answer}
                                  </p>
                                </motion.div>
                              )}
                            </div>
                          ))}
                        </div>
                      </motion.div>
                    )}
                  </div>
                </div>
              </div>

              {/* Right Column - Registration Card */}
              <div className="lg:w-1/3">
                <div className="sticky top-8">
                  <div className="bg-white rounded-2xl shadow-xl overflow-hidden">
                    <div className="bg-gradient-to-r from-red-500 to-pink-500 px-8 py-6">
                      <h3 className="text-2xl font-bold text-white flex items-center">
                        <span className="mr-3">üéì</span>
                        ƒêƒÉng k√Ω kh√≥a h·ªçc
                      </h3>
                    </div>
                    <div className="p-8">
                      <div className="space-y-6 mb-8">
                        <div className="flex justify-between items-center p-4 bg-red-50 rounded-xl">
                          <span className="text-gray-700 font-medium">
                            H·ªçc ph√≠:
                          </span>
                          <span className="text-2xl font-bold text-red-600">
                            {new Intl.NumberFormat("vi-VN").format(
                              course.Tuition
                            )}{" "}
                            VNƒê
                          </span>
                        </div>
                        <div className="space-y-3">
                          <div className="flex justify-between items-center">
                            <span className="text-gray-600">
                              Th·ªùi gian h·ªçc:
                            </span>
                            <span className="font-semibold">
                              {course.schedule}
                            </span>
                          </div>
                          <div className="flex justify-between items-center">
                            <span className="text-gray-600">Lo·∫°i b·∫±ng:</span>
                            <span className="font-semibold">
                              {course.license_type}
                            </span>
                          </div>
                          <div className="flex justify-between items-center">
                            <span className="text-gray-600">Th·ªùi l∆∞·ª£ng:</span>
                            <span className="font-semibold">3 th√°ng</span>
                          </div>
                        </div>
                      </div>

                      {(isUser || isAdmin) && (
                        <motion.button
                          whileHover={{ scale: 1.02 }}
                          whileTap={{ scale: 0.98 }}
                          onClick={handleRegisterCourse}
                          className="w-full bg-gradient-to-r from-green-500 to-green-600 hover:from-green-600 hover:to-green-700 text-white font-bold py-4 px-6 rounded-xl shadow-lg transition-all duration-300 text-lg"
                        >
                          ƒêƒÉng k√Ω ngay
                        </motion.button>
                      )}

                      {!currentUser && (
                        <div className="text-center space-y-4">
                          <p className="text-gray-600">
                            B·∫°n c·∫ßn ƒëƒÉng nh·∫≠p ƒë·ªÉ ƒëƒÉng k√Ω kh√≥a h·ªçc
                          </p>
                          <motion.button
                            whileHover={{ scale: 1.02 }}
                            whileTap={{ scale: 0.98 }}
                            onClick={() => navigate("/login")}
                            className="w-full bg-gradient-to-r from-red-500 to-pink-500 hover:from-red-600 hover:to-pink-600 text-white font-bold py-4 px-6 rounded-xl transition-all duration-300 text-lg"
                          >
                            üîê ƒêƒÉng nh·∫≠p
                          </motion.button>
                        </div>
                      )}

                      <div className="mt-8 pt-8 border-t border-gray-200">
                        <h4 className="font-bold text-gray-900 mb-4 flex items-center">
                          <span className="mr-2">üìû</span>
                          H·ªó tr·ª£ t∆∞ v·∫•n
                        </h4>
                        <div className="space-y-3">
                          <div className="flex items-center p-3 bg-gray-50 rounded-lg">
                            <span className="text-2xl mr-3">üì±</span>
                            <span className="text-gray-700 font-medium">
                              0902.355.090
                            </span>
                          </div>
                          <div className="flex items-center p-3 bg-gray-50 rounded-lg">
                            <span className="text-2xl mr-3">‚úâÔ∏è</span>
                            <span className="text-gray-700 font-medium">
                              support@trungluong.com
                            </span>
                          </div>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </section>
      </div>
      <Footer />
    </>
  );
};

export default PageCourseDetail;
